{"ast":null,"code":"import _classCallCheck from \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/src/container/MainView.js\";\nimport React, { Component } from \"react\";\nimport \"./MainView.css\";\nimport ContentList from \"../component/contentList/ContentList.js\";\nimport FullContent from \"../component/fullcontent/FullContent.js\";\nimport axios from \"axios\";\n\nvar MainView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainView, _Component);\n\n  function MainView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fullContent: {},\n      // 메인화면에 가장 큰 영상 플레이어 콘텐츠를 가지는 state\n      contents: [] // 하단의 리스트에 들어갈 콘텐츠를 가지는 state\n\n    };\n\n    _this.setContents = function (data) {\n      var list = [];\n      data.items.forEach(function (item, index) {\n        list.push({\n          id: item.id,\n          name: item.snippet.title\n        });\n      });\n      return list;\n    };\n\n    _this.handleFullContentChange = function (content) {\n      _this.setState({\n        fullContent: content\n      });\n    };\n\n    _this.fetchYoutube = function () {\n      //axios를 이용해서 유튜브에 영상 목록을 달라고 요청\n      axios.post(\"https://www.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&key=AIzaSyC-v1sIG2Wn3YnoD_7_bBS4zPDceDLKmLY&maxResults=21\").then(function (_ref) {\n        var data = _ref.data;\n\n        //유튜브로 부터 요청한 데이터를 전달 받으면 then으로 데이터를 받음\n        //디스트럭쳐링을 통해서 유튜브로부터 받은 데이터중에서 data만 가져옴\n        var list = _this.setContents(data); //받아온 데이터를 내가 원하는 형태로 가공\n\n\n        _this.setState({\n          // 가공한 데이터로 지금 바로 실행할 데이터와, 목록에 보여줄 데이터를 state에 저장\n          contents: list.slice(1, list.length),\n          //slice 함수는 배열형 데이터를 첫번째인자부터 두번째인자 전까지를 반환해주는 함수 입니다.\n          fullContent: list[0] //가져온 데이터중 첫번째 데이터를 화면에서 실행 시킵니다.\n\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MainView, [{\n    key: \"componentDidMount\",\n    //컴포넌트 렌더링이 완료된 후 유튜브에서 데이터 불러옴\n    value: function componentDidMount() {\n      this.fetchYoutube();\n    } //메인화면에서 영상을 실행하는 플레이어를 제어하는 함수\n    //이 함수를 이용해서 영상을 변경 한다.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          contents = _this$state.contents,\n          fullContent = _this$state.fullContent;\n      return React.createElement(\"div\", {\n        className: \"mainView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FullContent, {\n        content: fullContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(ContentList, {\n        contents: contents,\n        onClick: this.handleFullContentChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MainView;\n}(Component);\n\nexport default MainView;","map":{"version":3,"sources":["/Users/easier/Coding/React_Study/awesome-react-student/3week/class/src/container/MainView.js"],"names":["React","Component","ContentList","FullContent","axios","MainView","state","fullContent","contents","setContents","data","list","items","forEach","item","index","push","id","name","snippet","title","handleFullContentChange","content","setState","fetchYoutube","post","then","slice","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,Q;;;;;;;;;;;;;;;;;UAUJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE,EADP;AACW;AACjBC,MAAAA,QAAQ,EAAE,EAFJ,CAEO;;AAFP,K;;UAKRC,W,GAAc,UAAAC,IAAI,EAAI;AACpB,UAAIC,IAAI,GAAG,EAAX;AAEAD,MAAAA,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAClCJ,QAAAA,IAAI,CAACK,IAAL,CAAU;AAAEC,UAAAA,EAAE,EAAEH,IAAI,CAACG,EAAX;AAAeC,UAAAA,IAAI,EAAEJ,IAAI,CAACK,OAAL,CAAaC;AAAlC,SAAV;AACD,OAFD;AAGA,aAAOT,IAAP;AACD,K;;UASDU,uB,GAA0B,UAAAC,OAAO,EAAI;AACnC,YAAKC,QAAL,CAAc;AACZhB,QAAAA,WAAW,EAAEe;AADD,OAAd;AAGD,K;;UAGDE,Y,GAAe,YAAM;AACnB;AACApB,MAAAA,KAAK,CACFqB,IADH,CAEI,uIAFJ,EAIGC,IAJH,CAIQ,gBAAc;AAAA,YAAXhB,IAAW,QAAXA,IAAW;;AAClB;AACA;AAEA,YAAMC,IAAI,GAAG,MAAKF,WAAL,CAAiBC,IAAjB,CAAb,CAJkB,CAImB;;;AAErC,cAAKa,QAAL,CAAc;AACZ;AACAf,UAAAA,QAAQ,EAAEG,IAAI,CAACgB,KAAL,CAAW,CAAX,EAAchB,IAAI,CAACiB,MAAnB,CAFE;AAE0B;AACtCrB,UAAAA,WAAW,EAAEI,IAAI,CAAC,CAAD,CAHL,CAGS;;AAHT,SAAd;AAKD,OAfH;AAgBD,K;;;;;;;AAhCD;wCACoB;AAClB,WAAKa,YAAL;AACD,K,CAED;AACA;;;;6BA4BS;AAAA,wBAC2B,KAAKlB,KADhC;AAAA,UACCE,QADD,eACCA,QADD;AAAA,UACWD,WADX,eACWA,WADX;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAQE,oBAAC,WAAD;AACE,QAAA,QAAQ,EAAEC,QADZ;AAEE,QAAA,OAAO,EAAE,KAAKa,uBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAeD;;;;EA5EoBpB,S;;AA+EvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./MainView.css\";\nimport ContentList from \"../component/contentList/ContentList.js\";\nimport FullContent from \"../component/fullcontent/FullContent.js\";\nimport axios from \"axios\";\n\nclass MainView extends Component {\n  // constructor(props) {\n  //   super(props);\n\n  //     this.state = {\n  //     \tfullContent: {},// 메인화면에 가장 큰 영상 플레이어 콘텐츠를 가지는 state\n  //   \t  contents : [] // 하단의 리스트에 들어갈 콘텐츠를 가지는 state\n  //   };\n\n  // }\n  state = {\n    fullContent: {}, // 메인화면에 가장 큰 영상 플레이어 콘텐츠를 가지는 state\n    contents: [] // 하단의 리스트에 들어갈 콘텐츠를 가지는 state\n  };\n\n  setContents = data => {\n    let list = [];\n\n    data.items.forEach((item, index) => {\n      list.push({ id: item.id, name: item.snippet.title });\n    });\n    return list;\n  };\n\n  //컴포넌트 렌더링이 완료된 후 유튜브에서 데이터 불러옴\n  componentDidMount() {\n    this.fetchYoutube();\n  }\n\n  //메인화면에서 영상을 실행하는 플레이어를 제어하는 함수\n  //이 함수를 이용해서 영상을 변경 한다.\n  handleFullContentChange = content => {\n    this.setState({\n      fullContent: content\n    });\n  };\n\n  //유튜브에 ajax 통신을 해서 데이터를 불러 오는 함수\n  fetchYoutube = () => {\n    //axios를 이용해서 유튜브에 영상 목록을 달라고 요청\n    axios\n      .post(\n        \"https://www.googleapis.com/youtube/v3/videos?part=snippet&chart=mostPopular&key=AIzaSyC-v1sIG2Wn3YnoD_7_bBS4zPDceDLKmLY&maxResults=21\"\n      )\n      .then(({ data }) => {\n        //유튜브로 부터 요청한 데이터를 전달 받으면 then으로 데이터를 받음\n        //디스트럭쳐링을 통해서 유튜브로부터 받은 데이터중에서 data만 가져옴\n\n        const list = this.setContents(data); //받아온 데이터를 내가 원하는 형태로 가공\n\n        this.setState({\n          // 가공한 데이터로 지금 바로 실행할 데이터와, 목록에 보여줄 데이터를 state에 저장\n          contents: list.slice(1, list.length), //slice 함수는 배열형 데이터를 첫번째인자부터 두번째인자 전까지를 반환해주는 함수 입니다.\n          fullContent: list[0] //가져온 데이터중 첫번째 데이터를 화면에서 실행 시킵니다.\n        });\n      });\n  };\n\n  render() {\n    const { contents, fullContent } = this.state;\n\n    return (\n      <div className=\"mainView\">\n        {/*\n\t\t\t영상을 실행 시키는 컴포넌트 \n      \t*/}\n        <FullContent content={fullContent} />\n        {/*\n\t\t\t실행할 영상 리스트를 출력하는 컴포넌트\n      \t*/}\n        <ContentList\n          contents={contents}\n          onClick={this.handleFullContentChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MainView;\n"]},"metadata":{},"sourceType":"module"}