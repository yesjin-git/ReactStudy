{"ast":null,"code":"import _classCallCheck from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/src/container/SearchResultMenu.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport ContentList from '../component/contentList/ContentList.js';\n\nvar SearchResultMenu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchResultMenu, _Component);\n\n  function SearchResultMenu(props) {\n    var _this;\n\n    _classCallCheck(this, SearchResultMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchResultMenu).call(this, props));\n\n    _this.setContents = function (data) {\n      var list = [];\n      data.items.forEach(function (item, index) {\n        list.push({\n          id: item.id.videoId,\n          title: item.snippet.title\n        });\n      });\n      return list;\n    };\n\n    _this.handleFullContentChange = function (content) {\n      _this.setState({\n        fullContent: content\n      });\n    };\n\n    _this.fetchYoutube = function () {\n      var maxResults = 30;\n      var token = \"AIzaSyC-v1sIG2Wn3YnoD_7_bBS4zPDceDLKmLY\";\n      var fullAddress = window.location.href;\n      var keyword = fullAddress.split(\"http://localhost:3001/\").join(\"\");\n      Axios.get('https://www.googleapis.com/youtube/v3/search?q=' + keyword + '&part=snippet&key=' + token + '&maxResults=' + maxResults).then(function (_ref) {\n        var data = _ref.data;\n\n        //유튜브로 부터 요청한 데이터를 전달 받으면 then으로 데이터를 받음\n        //디스트럭쳐링을 통해서 유튜브로부터 받은 데이터중에서 data만 가져옴 \n        var list = _this.setContents(data); //받아온 데이터를 내가 원하는 형태로 가공\n\n\n        _this.setState({\n          // 가공한 데이터로 지금 바로 실행할 데이터와, 목록에 보여줄 데이터를 state에 저장\n          contents: list.slice(1, list.length),\n          //slice 함수는 배열형 데이터를 첫번째인자부터 두번째인자 전까지를 반환해주는 함수 입니다.\n          fullContent: list[0] //가져온 데이터중 첫번째 데이터를 화면에서 실행 시킵니다.\n\n        });\n      });\n    };\n\n    _this.state = {\n      fullContent: {},\n      // 메인화면에 가장 큰 영상 플레이어 콘텐츠를 가지는 state\n      contents: [] // 하단의 리스트에 들어갈 콘텐츠를 가지는 state\n\n    };\n    return _this;\n  }\n\n  _createClass(SearchResultMenu, [{\n    key: \"componentDidMount\",\n    //컴포넌트 렌더링이 완료된 후 유튜브에서 데이터 불러옴\n    value: function componentDidMount() {\n      this.fetchYoutube();\n    } //메인화면에서 영상을 실행하는 플레이어를 제어하는 함수\n    //이 함수를 이용해서 영상을 변경 한다.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"ddddddddddd\");\n      return React.createElement(\"div\", {\n        className: \"mainView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(ContentList, {\n        contents: this.state.contents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SearchResultMenu;\n}(Component);\n\nexport { SearchResultMenu as default };","map":{"version":3,"sources":["/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/src/container/SearchResultMenu.js"],"names":["React","Component","Axios","ContentList","SearchResultMenu","props","setContents","data","list","items","forEach","item","index","push","id","videoId","title","snippet","handleFullContentChange","content","setState","fullContent","fetchYoutube","maxResults","token","fullAddress","window","location","href","keyword","split","join","get","then","contents","slice","length","state","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;;IAEqBC,gB;;;;;AACpB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACZ,0FAAMA,KAAN;;AADY,UAShBC,WATgB,GASF,UAACC,IAAD,EAAU;AACvB,UAAIC,IAAI,GAAG,EAAX;AACCD,MAAAA,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChCJ,QAAAA,IAAI,CAACK,IAAL,CAAU;AAACC,UAAAA,EAAE,EAACH,IAAI,CAACG,EAAL,CAAQC,OAAZ;AAAoBC,UAAAA,KAAK,EAACL,IAAI,CAACM,OAAL,CAAaD;AAAvC,SAAV;AACH,OAFD;AAGA,aAAOR,IAAP;AACD,KAfe;;AAAA,UAwBhBU,uBAxBgB,GAwBU,UAACC,OAAD,EAAa;AACrC,YAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAACF;AADA,OAAd;AAGD,KA5Be;;AAAA,UA+BhBG,YA/BgB,GA+BD,YAAM;AACjB,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,KAAK,GAAG,yCAAZ;AACA,UAAIC,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAlC;AACA,UAAIC,OAAO,GAAGJ,WAAW,CAACK,KAAZ,CAAkB,wBAAlB,EAA4CC,IAA5C,CAAiD,EAAjD,CAAd;AACF7B,MAAAA,KAAK,CAAC8B,GAAN,CACJ,oDACAH,OADA,GACQ,oBADR,GAEAL,KAFA,GAEM,cAFN,GAGAD,UAJI,EAMCU,IAND,CAMM,gBAAY;AAAA,YAAV1B,IAAU,QAAVA,IAAU;;AAAC;AACC;AAEhB,YAAMC,IAAI,GAAG,MAAKF,WAAL,CAAiBC,IAAjB,CAAb,CAHc,CAGqB;;;AAEnC,cAAKa,QAAL,CAAc;AAAC;AACXc,UAAAA,QAAQ,EAAC1B,IAAI,CAAC2B,KAAL,CAAW,CAAX,EAAa3B,IAAI,CAAC4B,MAAlB,CADC;AACyB;AACnCf,UAAAA,WAAW,EAACb,IAAI,CAAC,CAAD,CAFN,CAES;;AAFT,SAAd;AAIH,OAfD;AAgBD,KApDe;;AAEZ,UAAK6B,KAAL,GAAa;AACThB,MAAAA,WAAW,EAAE,EADJ;AACO;AAChBa,MAAAA,QAAQ,EAAG,EAFF,CAEK;;AAFL,KAAb;AAFY;AAOb;;;;AAUL;wCACsB;AAChB,WAAKZ,YAAL;AACH,K,CAEH;AACA;;;;6BA+BW;AACLgB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACF,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWH,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,CADF;AAKD;;;;EA9DyCjC,S;;SAAzBG,gB","sourcesContent":["import React, { Component } from 'react'\nimport Axios from 'axios';\nimport ContentList from '../component/contentList/ContentList.js';\n\nexport default class SearchResultMenu extends Component {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n            fullContent: {},// 메인화면에 가장 큰 영상 플레이어 콘텐츠를 가지는 state\n            contents : [] // 하단의 리스트에 들어갈 콘텐츠를 가지는 state\n        };\n  \n      }\n  \n    setContents = (data) => { \n     let list = []\n      data.items.forEach((item, index) => {\n          list.push({id:item.id.videoId,title:item.snippet.title})\n      })\n      return list\n    }\n  \n  //컴포넌트 렌더링이 완료된 후 유튜브에서 데이터 불러옴\n    componentDidMount() {\n        this.fetchYoutube();\n    }\n  \n  //메인화면에서 영상을 실행하는 플레이어를 제어하는 함수\n  //이 함수를 이용해서 영상을 변경 한다.\n    handleFullContentChange = (content) => {\n      this.setState({\n        fullContent:content\n      })\n    }\n  \n  //유튜브에 ajax 통신을 해서 데이터를 불러 오는 함수\n    fetchYoutube = () => {\n        let maxResults = 30;\n        let token = \"AIzaSyC-v1sIG2Wn3YnoD_7_bBS4zPDceDLKmLY\";\n        let fullAddress = window.location.href;\n        let keyword = fullAddress.split(\"http://localhost:3001/\").join(\"\");\n      Axios.get(\n\t\t'https://www.googleapis.com/youtube/v3/search?q='+\n\t\tkeyword+'&part=snippet&key='+\n\t\ttoken+'&maxResults='+\n\t\tmaxResults\n          )\n      .then(({data}) => {//유튜브로 부터 요청한 데이터를 전달 받으면 then으로 데이터를 받음\n                          //디스트럭쳐링을 통해서 유튜브로부터 받은 데이터중에서 data만 가져옴 \n  \n          const list = this.setContents(data)//받아온 데이터를 내가 원하는 형태로 가공\n  \n          this.setState({// 가공한 데이터로 지금 바로 실행할 데이터와, 목록에 보여줄 데이터를 state에 저장\n              contents:list.slice(1,list.length),//slice 함수는 배열형 데이터를 첫번째인자부터 두번째인자 전까지를 반환해주는 함수 입니다.\n              fullContent:list[0]//가져온 데이터중 첫번째 데이터를 화면에서 실행 시킵니다.\n          })\n      })\n    }\n  \n    render() {\n        console.log(\"ddddddddddd\");\n      return (\n        <div className=\"mainView\">\n             <ContentList contents={this.state.contents} />\n        </div>\n      );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}