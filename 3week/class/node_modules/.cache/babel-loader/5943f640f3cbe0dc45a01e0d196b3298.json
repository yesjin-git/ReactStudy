{"ast":null,"code":"import _classCallCheck from \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/easier/Coding/React_Study/awesome-react-student/3week/class/src/component/content/Content.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Content.css';\nimport PropTypes from 'prop-types';\n\nvar ContentView = function ContentView(_ref) {\n  var id = _ref.id,\n      children = _ref.children;\n  var url = \"/view/\".concat(id);\n  return React.createElement(Link, {\n    to: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, children); // 원래 NavLink로 되있었는데, Link로 해도 문제 없이 돌아가고, 구조가 더 간단해져서 Link로 바꿈.\n};\n\nvar FullContentLink = function FullContentLink(_ref2) {\n  var onChangeFullContent = _ref2.onChangeFullContent,\n      children = _ref2.children;\n  return React.createElement(\"div\", {\n    onClick: onChangeFullContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, children);\n};\n\nvar Content =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Content, _Component);\n\n  function Content(props) {\n    var _this;\n\n    _classCallCheck(this, Content);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Content).call(this, props));\n\n    _this.onHover = function () {\n      _this.setState({\n        isShow: true\n      });\n    };\n\n    _this.onUnHover = function () {\n      _this.setState({\n        isShow: false\n      });\n    };\n\n    _this.onChangeFullContent = function () {\n      var _this$props = _this.props,\n          onClick = _this$props.onClick,\n          content = _this$props.content;\n      onClick(content);\n    };\n\n    _this.displayImg = function () {\n      var content = _this.props.content;\n      var isShow = _this.state.isShow;\n      var imgSrc = \"https://img.youtube.com/vi/\".concat(content.id, \"/0.jpg\");\n      var imgComponent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"thumbnail img\",\n        className: \"thumbnail\",\n        src: imgSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), isShow ? React.createElement(\"div\", {\n        className: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, content.name)) : '');\n      return imgComponent;\n    };\n\n    _this.state = {\n      isShow: false\n    };\n    return _this;\n  }\n\n  _createClass(Content, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.content.id);\n      return React.createElement(\"div\", {\n        className: \"content\",\n        onMouseEnter: function onMouseEnter() {\n          return _this2.onHover();\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this2.onUnHover();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.props.onClick ? React.createElement(FullContentLink, {\n        onChangeFullContent: this.onChangeFullContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.displayImg()) : React.createElement(ContentView, {\n        id: this.props.content.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.displayImg()));\n    }\n  }]);\n\n  return Content;\n}(Component);\n\nContent.propTypes = {\n  onClick: PropTypes.func,\n  content: PropTypes.object\n};\nexport default Content;","map":{"version":3,"sources":["/Users/easier/Coding/React_Study/awesome-react-student/3week/class/src/component/content/Content.js"],"names":["React","Component","Link","PropTypes","ContentView","id","children","url","FullContentLink","onChangeFullContent","Content","props","onHover","setState","isShow","onUnHover","onClick","content","displayImg","state","imgSrc","imgComponent","name","console","log","propTypes","func","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Content.css';\nimport PropTypes from 'prop-types';\n\nconst ContentView = ({ id, children }) => {\n  const url = `/view/${id}`;\n  return (\n    <Link to={url}>\n      {children}\n    </Link>\n  );\n  // 원래 NavLink로 되있었는데, Link로 해도 문제 없이 돌아가고, 구조가 더 간단해져서 Link로 바꿈.\n};\n\nconst FullContentLink = ({ onChangeFullContent, children }) => (\n  <div onClick={onChangeFullContent}>\n    {children}\n  </div>\n);\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\t    isShow: false,\n    };\n  }\n\n\tonHover = () => {\n\t  this.setState({ isShow: true });\n\t}\n\n\tonUnHover = () => {\n\t  this.setState({ isShow: false });\n\t}\n\n  onChangeFullContent = () => {\n    const { onClick, content } = this.props;\n    onClick(content);\n   \n  }\n\n  displayImg = () => {\n    const { content } = this.props;\n    const { isShow } = this.state;\n    const imgSrc = `https://img.youtube.com/vi/${content.id}/0.jpg`;\n    const imgComponent = (\n      <div>\n        <img alt=\"thumbnail img\" className=\"thumbnail\" src={imgSrc} />\n        {isShow\n        ? (\n          <div className=\"middle\">\n            <div className=\"text\">\n              {content.name}\n            </div>\n          </div>\n        )\n        : ''}\n      </div>\n      );\n\n    return imgComponent;\n  }\n\n\n  render() {\n   \n   console.log(this.props.content.id);\n    return (\n      <div className=\"content\" onMouseEnter={() => this.onHover()} onMouseLeave={() => this.onUnHover()}>\n        {/* 홈 화면에서는  */}\n        {this.props.onClick\n          ? (<FullContentLink onChangeFullContent={this.onChangeFullContent}>{this.displayImg()}</FullContentLink>)\n          : (<ContentView id={this.props.content.id}>{this.displayImg()}</ContentView>)}\n      </div>\n    );\n  }\n}\n\nContent.propTypes = {\n  onClick: PropTypes.func,\n  content: PropTypes.object,\n};\n\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}