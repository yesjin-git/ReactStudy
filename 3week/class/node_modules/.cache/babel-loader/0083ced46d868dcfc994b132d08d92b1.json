{"ast":null,"code":"import _regeneratorRuntime from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/src/container/SearchResultMenu.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport ContentList from '../component/contentList/ContentList.js';\n\nvar SearchResultMenu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchResultMenu, _Component);\n\n  function SearchResultMenu(props) {\n    var _this;\n\n    _classCallCheck(this, SearchResultMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchResultMenu).call(this, props));\n\n    _this.setContents = function (data) {\n      var list = [];\n      data.items.forEach(function (item, index) {\n        list.push({\n          id: item.id.videoId,\n          title: item.snippet.title\n        });\n      });\n      return list;\n    };\n\n    _this.fetchYoutube =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var maxResults, token, keyword, _ref2, data, list;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              maxResults = 30;\n              token = \"AIzaSyC-v1sIG2Wn3YnoD_7_bBS4zPDceDLKmLY\";\n              keyword = _this.props.match.params.id;\n              _context.prev = 3;\n              _context.next = 6;\n              return Axios.get('https://www.googleapis.com/youtube/v3/search?q=' + keyword + '&part=snippet&key=' + token + '&maxResults=' + maxResults);\n\n            case 6:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              list = _this.setContents(data); //받아온 데이터를 내가 원하는 형태로 가공\n\n              _this.setState({\n                // 가공한 데이터로 지금 바로 실행할 데이터와, 목록에 보여줄 데이터를 state에 저장\n                contents: list.slice(1, list.length) //slice 함수는 배열형 데이터를 첫번째인자부터 두번째인자 전까지를 반환해주는 함수 입니다.\n\n              });\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[3, 12]]);\n    }));\n    _this.state = {\n      contents: [] // 하단의 리스트에 들어갈 콘텐츠를 가지는 state\n\n    };\n    return _this;\n  }\n\n  _createClass(SearchResultMenu, [{\n    key: \"componentDidMount\",\n    //컴포넌트 렌더링이 완료된 후 유튜브에서 데이터 불러옴\n    value: function componentDidMount() {\n      this.fetchYoutube();\n    } //유튜브에 ajax 통신을 해서 데이터를 불러 오는 함수\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: \"mainView\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(ContentList, {\n        contents: this.state.contents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SearchResultMenu;\n}(Component);\n\nexport { SearchResultMenu as default };","map":{"version":3,"sources":["/Users/JYP/Desktop/react-study/awesome-react-student/3week/class/src/container/SearchResultMenu.js"],"names":["React","Component","Axios","ContentList","SearchResultMenu","props","setContents","data","list","items","forEach","item","index","push","id","videoId","title","snippet","fetchYoutube","maxResults","token","keyword","match","params","get","setState","contents","slice","length","console","log","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;;IAEqBC,gB;;;;;AACpB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACZ,0FAAMA,KAAN;;AADY,UAQhBC,WARgB,GAQF,UAACC,IAAD,EAAU;AACvB,UAAIC,IAAI,GAAG,EAAX;AACCD,MAAAA,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChCJ,QAAAA,IAAI,CAACK,IAAL,CAAU;AAACC,UAAAA,EAAE,EAACH,IAAI,CAACG,EAAL,CAAQC,OAAZ;AAAoBC,UAAAA,KAAK,EAACL,IAAI,CAACM,OAAL,CAAaD;AAAvC,SAAV;AACH,OAFD;AAGA,aAAOR,IAAP;AACD,KAde;;AAAA,UAsBhBU,YAtBgB;AAAA;AAAA;AAAA;AAAA,6BAsBD;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,cAAAA,UADO,GACM,EADN;AAEPC,cAAAA,KAFO,GAEC,yCAFD;AAGPC,cAAAA,OAHO,GAGG,MAAKhB,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CAAwBT,EAH3B;AAAA;AAAA;AAAA,qBAKYZ,KAAK,CAACsB,GAAN,CACnB,oDACAH,OADA,GACQ,oBADR,GAEAD,KAFA,GAEM,cAFN,GAGAD,UAJmB,CALZ;;AAAA;AAAA;AAKFZ,cAAAA,IALE,SAKFA,IALE;AAWDC,cAAAA,IAXC,GAWM,MAAKF,WAAL,CAAiBC,IAAjB,CAXN,EAW4B;;AAEnC,oBAAKkB,QAAL,CAAc;AAAC;AACXC,gBAAAA,QAAQ,EAAClB,IAAI,CAACmB,KAAL,CAAW,CAAX,EAAanB,IAAI,CAACoB,MAAlB,CADC,CACwB;;AADxB,eAAd;;AAbO;AAAA;;AAAA;AAAA;AAAA;AAiBTC,cAAAA,OAAO,CAACC,GAAR;;AAjBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtBC;AAEZ,UAAKC,KAAL,GAAa;AACTL,MAAAA,QAAQ,EAAG,EADF,CACK;;AADL,KAAb;AAFY;AAMb;;;;AAUL;wCACsB;AAChB,WAAKR,YAAL;AACH,K,CAEH;;;;6BAsBW;AACLW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAjB;AACF,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAK0B,KAAL,CAAWL,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,CADF;AAKD;;;;EAnDyCzB,S;;SAAzBG,gB","sourcesContent":["import React, { Component } from 'react'\nimport Axios from 'axios';\nimport ContentList from '../component/contentList/ContentList.js';\n\nexport default class SearchResultMenu extends Component {\n\tconstructor(props) {\n        super(props);\n        this.state = {\n            contents : [] // 하단의 리스트에 들어갈 콘텐츠를 가지는 state\n        };\n  \n      }\n  \n    setContents = (data) => { \n     let list = []\n      data.items.forEach((item, index) => {\n          list.push({id:item.id.videoId,title:item.snippet.title})\n      })\n      return list\n    }\n  \n  //컴포넌트 렌더링이 완료된 후 유튜브에서 데이터 불러옴\n    componentDidMount() {\n        this.fetchYoutube();\n    }\n\n  //유튜브에 ajax 통신을 해서 데이터를 불러 오는 함수\n    fetchYoutube = async () => {\n        let maxResults = 30;\n        let token = \"AIzaSyC-v1sIG2Wn3YnoD_7_bBS4zPDceDLKmLY\";\n        let keyword = this.props.match.params.id;\n        try {\n          const {data} = await Axios.get(\n            'https://www.googleapis.com/youtube/v3/search?q='+\n            keyword+'&part=snippet&key='+\n            token+'&maxResults='+\n            maxResults\n                  )\n            const list = this.setContents(data)//받아온 데이터를 내가 원하는 형태로 가공\n\n            this.setState({// 가공한 데이터로 지금 바로 실행할 데이터와, 목록에 보여줄 데이터를 state에 저장\n                contents:list.slice(1,list.length)//slice 함수는 배열형 데이터를 첫번째인자부터 두번째인자 전까지를 반환해주는 함수 입니다.\n            })\n        } catch(e) {\n          console.log(e)\n        }\n    }\n  \n    render() {\n        console.log(this.props);\n      return (\n        <div className=\"mainView\">\n             <ContentList contents={this.state.contents} />\n        </div>\n      );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}